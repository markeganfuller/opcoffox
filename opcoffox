#!/bin/bash

DOCKER_COMPOSE_FILE='/usr/lib/opcoffox/docker-compose.yaml'

function output(){
    msg=$1
    timeout=$2
    if [ -t 0 ]; then
        echo "$msg"
    elif command -v Xdialog > /dev/null 2>&1; then
        if [ "$timeout" -gt 0 ]; then
            # Note we background here so we can carry on
            Xdialog --title "opcoffox" --no-buttons --infobox "$msg" 11 79 $timeout &
        else
            Xdialog --title "opcoffox" --msgbox "$msg" 11 79
        fi
    else
        echo "Xdialog not found and not running in an interactive terminal." >&2
        exit 1
    fi
}

function get_input() {
    desc=$1
    secure=$2

    if [ -t 0 ]; then
        # If in terminal ask directly
        if [ -z "$secure" ]; then
            read -p "Enter ${desc}: " -r input_value
        else
            read -p "Enter ${desc}: " -rs input_value
            echo "" >&2
        fi
    else
        # If not in term and Xdialog installed use that
        if command -v Xdialog > /dev/null 2>&1; then
            if [ -z "$secure" ]; then
                input_value=$(Xdialog --stdout --title "opcoffox" --inputbox "opcoffox\nRSA PIN" 15 36)
            else
                input_value=$(Xdialog --stdout --title "opcoffox" --passwordbox "opcoffox\nRSA PIN" 15 36)
            fi
        else
            echo "Xdialog not found and not running in an interactive terminal." >&2
            exit 1
        fi
    fi

    echo "$input_value"
}

output "Pulling latest containers" 5000
# Ignore 'variable is not set' errors
docker-compose -f "${DOCKER_COMPOSE_FILE}" pull 2>&1 | grep -v 'variable is not set'
output "Latest containers pulled" 3000

# Load config settings
if [ -f ~/.opcoffox ]; then
    CONFIG_FILE="${HOME}/.opcoffox"
elif [ -f /etc/opcoffox/config ]; then
    CONFIG_FILE='/etc/opcoffox/config'
else
    output "\
Config file not found in ~/.opcoffox or /etc/opcoffox/config

Please configure opcoffox using the example file at:
/usr/share/opcoffox/config_example
" 0
    exit 1
fi

if [ "$(stat -c "%a" "${CONFIG_FILE}")" != "600" ]; then
    output "\
Incorrect permissions on ${CONFIG_FILE}

Permissions should be 600
" 0
    exit 1
fi

source "${CONFIG_FILE}"

# Get the VPN URL from the user if we haven't got one.
if [ "${URL}" = "" ]; then
    URL=$(get_input 'VPN URL')
    export URL
fi;

# Default Homepage if not specified
if [ "${HOMEPAGE}" = "" ]; then
    HOMEPAGE='google.com'
    export HOMEPAGE
fi;

# Get the Username from the user if we haven't got one.
if [ "${USERNAME}" = "" ]; then
    USERNAME=$(get_input 'Username')
    export USERNAME
fi;

# Get the password from the user if we haven't got one.
if [ "${PASSWORD}" = "" ]; then
    PASSWORD=$(get_input 'Password' 'secure')
    export PASSWORD
fi;

# Get the pin from the user if we haven't got one.
if [ "${PIN}" = "" ]; then
    PIN=$(get_input 'PIN' 'secure')
    export PIN
fi;

# Get RSA token if we have been provided a seed
STOKEN=$(command -v stoken)
if [ "${STOKEN}" != "" ] && [ "${RSATOKEN}" != "" ]; then
    # shellcheck disable=SC2155
    export RSA=$(${STOKEN} --token "${RSATOKEN}" 2>&1)
fi;

# Get the RSA token from the user if we haven't got one.
if [ "${RSA}" = "" ]; then
    RSA=$(get_input 'RSA Token' 'secure')
    export RSA
fi;

# Allow access to xserver from docker
xhost "+local:"

output "Starting..." 2000
# Startup
# shellcheck disable=SC2086
docker-compose -f "${DOCKER_COMPOSE_FILE}" up ${COMPOSEOPTS}

# Cleanup
output "Cleaning up..." 3000
docker-compose -f "${DOCKER_COMPOSE_FILE}" down
xhost "-local:"
